plugins {
    id 'com.android.application'
    id 'jacoco'
    id 'org.sonarqube' version '3.5.0.2730'
}

android {
    namespace 'delta.dkt'
    compileSdk 33

    defaultConfig {
        applicationId "delta.dkt"
        minSdk 30
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
            finalizedBy jacocoTestReport
        }
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled true
        xml.destination file("${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml")
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

sonarqube {
    properties {
        property "sonar.coverage.exclusions", "src/main/java/delta/dkt/activities/**, src/main/java/delta/dkt/fragments/**, src/main/java/ClientUIHandling/*,src/main/java/network2/NetworkServiceDiscovery.java, src/main/java/network2/NetworkServiceDiscoveryClient.java, src/main/java/ServerLogic/*, src/main/java/ServerLogic/actions/*, src/main/java/ClientUIHandling/actions/*, src/main/java/ClientUIHandling/handlers/positioning/*"
        property "sonar.exclusions", "src/main/res/values/font_certs.xml"
        property "sonar.projectKey", "uni-aau_delta-dkt"
        property "sonar.organization", "uni-aau"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.projectDir}/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"

        property "sonar.issue.ignore.block", "e1"
        property "sonar.issue.ignore.block.e1.beginBlockRegexp", "\\s*//\\s*START-NOSCAN"
        property "sonar.issue.ignore.block.e1.endBlockRegexp", "\\s*//\\s*END-NOSCAN"

    }
}

dependencies {

	implementation 'androidx.appcompat:appcompat:1.6.1'	
    implementation 'com.google.android.material:material:1.8.0'	
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.test.espresso:espresso-intents:3.5.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.9.2")
    testImplementation 'junit:junit:4.12'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'	
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'	
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Espresso UI Testing Dependencies:
    androidTestImplementation 'androidx.test:runner:1.5.2'	
    androidTestImplementation 'androidx.test:rules:1.5.0'
}
